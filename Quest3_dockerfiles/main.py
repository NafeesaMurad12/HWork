# -*- coding: utf-8 -*-
"""Question3_FastAPI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13bGVk4tdnfpgOMDb0s5-oV7pAo5jiy5E
"""

labels = ["Positive", "Negative", "Neutral"]
index_to_labels = {index: label for index, label in enumerate(labels)}

from fastapi import FastAPI
import nest_asyncio
from pyngrok import ngrok
import uvicorn
from pydantic import BaseModel
import numpy as np
from transformers import AutoConfig, AutoModelForSequenceClassification, AutoTokenizer

# making response body
class Prediction(BaseModel):
  data: str


app = FastAPI()

@app.get('/')
async def home():
  return "please go to /docs"

# path used for predicting after uploading image file
@app.post('/predict/')
async def predict_out(data):
  model_name = 'distilbert-base-uncased'
  config = AutoConfig.from_pretrained(model_name, num_labels=3)
  model = AutoModelForSequenceClassification.from_config(config)
  tokenizer = AutoTokenizer.from_pretrained(model_name, use_fast=True)
  data = data
  #y = data['data']
  prepared_input = tokenizer.prepare_seq2seq_batch([data], return_tensors='pt')
  model = model.to('cpu')
  model.eval()
  model_output = model(**prepared_input)
  prediction = np.argmax(model_output.logits[0].detach().numpy())
  text = index_to_labels[prediction]
 
  return {
      'predict_class': text
 
  }

# using ngrok on google colab to expose url so it can be accessed from browser on my PC
ngrok_tunnel = ngrok.connect(7000)
print('Public URL:', ngrok_tunnel.public_url)
nest_asyncio.apply()
uvicorn.run(app, port=7000)